name: CI

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"
  schedule:
    # Run a cron job once daily, weekdays only
    - cron: "0 3 1,15 * *"

jobs:

  test:
    name: Pytest
    runs-on: ${{ matrix.cfg.os }}
    strategy:
      fail-fast: false
      matrix:
        cfg:
          - os: ubuntu-latest
            python-version: "3.7"
          - os: ubuntu-latest
            python-version: "3.9"
          - os: macos-latest
            python-version: "3.7"
          #- os: windows-latest
          #  python-version: "3.7"
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.cfg.python-version }}
          activate-environment: kissim
          channel-priority: true
          environment-file: devtools/test_env.yaml
          auto-activate-base: false
      - name: Additional info about the build
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a
      - name: Environment information
        shell: bash -l {0}
        run: |
          conda info --all
          conda list
      - name: Run tests
        shell: bash -l {0}
        run: |
          PYTEST_ARGS="--nbval-lax --current-env --nbval-cell-timeout=900"
          pytest $PYTEST_ARGS notebooks/ --ignore=notebooks/007_kissim_setups
  
  format:
    name: Black
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Install format dependencies
        run: python -m pip install black-nb shyaml
      - name: Run black-nb
        run: |
          black-nb -l 99 --check notebooks
          black -l 99 --check src
  
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Install lint dependencies
        shell: bash
        run: |
          python -m pip install flake8-nb
      - name: Run flake8-nb
        shell: bash
        run: |
          flake8-nb --config tox.ini notebooks
          flake8 --config tox.ini src

  readmes:
    name: READMEs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Install nbformat
        run: python -m pip install nbformat shyaml
      - name: Check READMEs are up-to-date
        run: |
          for path in notebooks/[^.]*/; do
            python devtools/regenerate_readmes.py --output README.md $path
          done
          # If the script above introduced changes (it shouldn't!), git diff will have output and an error code
          git diff --exit-code
